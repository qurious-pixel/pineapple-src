// Copyright 2021 yuzu Emulator Project
// Licensed under GPLv2 or any later version
// Refer to the license.txt file included.

#version 430 core

layout (local_size_x = 1, local_size_y = 1) in;

layout(binding = 0) buffer BgrImage {
    uint bgr_copy[];
};

void main() {
    const uint index = gl_GlobalInvocationID.y * gl_NumWorkGroups.x + gl_GlobalInvocationID.x;
    const uint packed_bits = bgr_copy[index];
    // R5 G6 B5
    // RRRRRGGG GGGBBBBB
    const uint blue = bitfieldExtract(packed_bits, 0, 5);
    const uint green = bitfieldExtract(packed_bits, 5 + 0, 6);
    const uint red = bitfieldExtract(packed_bits, 11 + 0, 5);
    const uint swapped_bits = ((blue << 11) | (green << 5 ) | red);
    bgr_copy[index] = swapped_bits;
    return;
}
